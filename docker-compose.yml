version: '3.9'

volumes:
  postgres_data_vol:
    external: false
  elasticsearch_data_vol:
    external: false

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - elasticsearch_data_vol:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    ports:
      - "127.0.0.1:5601:5601"
    depends_on:
      - elasticsearch

  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data_vol:/var/lib/postgresql/data/

  web:
    image: esbook
    build: .
    restart: always
    env_file: .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "127.0.0.1:5000:5000"
    entrypoint: /code/entrypoint.sh
    volumes:
      - .:/code

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    profiles:
      - server
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - .:/code
